{"version":3,"file":"static/js/871.f52670f5.chunk.js","mappings":"qMAmFA,UAxEe,WACb,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAAwCN,EAAAA,EAAAA,UAAS,IAAjD,eAAOO,EAAP,KAAqBC,EAArB,KACA,GAAsBR,EAAAA,EAAAA,UAAS,IAA/B,eAAOS,EAAP,KAAYC,EAAZ,KACA,GAA8BV,EAAAA,EAAAA,UAAS,IAAvC,eAAOW,EAAP,KAAgBC,EAAhB,KAEMC,EAAqC,GAAzBC,SAASP,GAEnBQ,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaL,GAASM,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAC5BpB,EAASoB,EAAKrB,OACdG,EAAYkB,EAAKnB,UACjBG,EAAUgB,EAAKjB,QACfG,EAAgBc,EAAKf,cACrBG,EAAOY,EAAKC,YACb,IACDX,EAAWK,EAASO,MACrB,GAAE,IAEH,IAAIC,GAAWC,EAAAA,EAAAA,MAMf,OACE,iCACE,mBAAQC,QANG,WACbF,EAASd,EACV,EAIG,sBACA,iBAAKiB,UAAU,QAAf,WACE,gBACEA,UAAU,YACVC,IAAKpB,EAAG,0CAAsCA,GAAQ,GACtDqB,IAAK7B,EACL8B,MAAM,WAER,4BACE,wBAAK9B,KACL,uCAAeY,EAAf,QACA,sCACA,uBAAIV,KACJ,oCACA,uBACGE,EAAO2B,KAAI,SAAAC,GAAE,OACZ,iBAAML,UAAU,SAAhB,SACGK,EAAGC,MADwBD,EAAGE,GADrB,aAQpB,iBAAKP,UAAU,YAAf,WACE,mDACA,2BACE,yBACE,SAAC,EAAAQ,KAAD,CAAMC,GAAE,kBAAatB,EAAb,SAAR,qBAEF,yBACE,SAAC,EAAAqB,KAAD,CAAMC,GAAE,kBAAatB,EAAb,YAAR,8BAIN,SAAC,KAAD,MAGL,C","sources":["elements/Movie2.jsx"],"sourcesContent":["import { getMovieById } from 'constants/dafaultApi';\nimport { useEffect, useState, useContext } from 'react';\nimport {\n  Link,\n  useParams,\n  Outlet,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\n// import Actors from './Actors';\n\nconst Movie2 = () => {\n  const [title, setTitle] = useState('');\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [vote_average, setVote_average] = useState([]);\n  const [img, setImg] = useState('');\n  const [oldPath, setOldPath] = useState('');\n\n  const userScore = parseInt(vote_average) * 10;\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieById(movieId).then(({ data }) => {\n      setTitle(data.title);\n      setOverview(data.overview);\n      setGenres(data.genres);\n      setVote_average(data.vote_average);\n      setImg(data.poster_path);\n    });\n    setOldPath(location.state);\n  }, []);\n\n  let navigate = useNavigate();\n\n  const goBack = () => {\n    navigate(oldPath);\n  };\n\n  return (\n    <>\n      <button onClick={goBack}>Go back</button>\n      <div className=\"movie\">\n        <img\n          className=\"movie-img\"\n          src={img ? `https://image.tmdb.org/t/p/w500/${img}` : ''}\n          alt={title}\n          width=\"200px\"\n        />\n        <div>\n          <h1>{title}</h1>\n          <p>User Score {userScore}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>\n            {genres.map(el => (\n              <span className=\"geners\" key={el.id}>\n                {el.name}\n              </span>\n            ))}\n          </p>\n        </div>\n      </div>\n      <div className=\"movie-box\">\n        <p>Additional Information</p>\n        <ul>\n          <li>\n            <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n          </li>\n          <li>\n            <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\nexport default Movie2;\n"],"names":["useState","title","setTitle","overview","setOverview","genres","setGenres","vote_average","setVote_average","img","setImg","oldPath","setOldPath","userScore","parseInt","movieId","useParams","location","useLocation","useEffect","getMovieById","then","data","poster_path","state","navigate","useNavigate","onClick","className","src","alt","width","map","el","name","id","Link","to"],"sourceRoot":""}