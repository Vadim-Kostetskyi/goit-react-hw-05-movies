{"version":3,"file":"static/js/264.8ad7fea2.chunk.js","mappings":"qMA+DA,UA5Dc,WACZ,OAA4CA,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,mBAAxC,eAAqBC,GAArB,WAEMC,GAAWC,EAAAA,EAAAA,MACXC,EAAkBF,EAASG,OAAOC,QAAQ,WAAY,KAS5DC,EAAAA,EAAAA,YAAU,WACJH,IACFI,EAAAA,EAAAA,IAAeJ,GAAiBK,MAAK,SAAAC,GACnCX,EAASW,EAAGC,KAAKC,QAClB,GAEJ,GAAE,IAcH,OACE,4BACE,kBAAMC,SAdW,SAAAH,GACnBA,EAAGI,iBAEClB,KACFY,EAAAA,EAAAA,IAAeZ,GAAgBa,MAAK,SAAAC,GAClCX,EAASW,EAAGC,KAAKC,QAClB,IACDX,EAAgB,CAAEc,MAAOnB,IACzBC,EAAkB,IAErB,EAIG,WACE,kBAAOmB,KAAK,OAAOC,SA5BL,SAAAP,GAClB,IAAQQ,EAAUR,EAAGS,cAAbD,MACRrB,EAAkBqB,EAAME,cACzB,EAyB+CF,MAAOtB,KACjD,mBAAQoB,KAAK,SAAb,uBAEDlB,EAAMuB,OAAS,IACd,wBACGvB,EAAMwB,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,GAAnB,OACT,yBACE,SAAC,EAAAC,KAAD,CACEC,MAAK,UAAKxB,EAASyB,UAAd,OAAyBzB,EAASG,QACvCuB,GAAE,kBAAaJ,GAFjB,SAIGD,KALIC,EADA,OAYf,SAAC,KAAD,MAGL,C","sources":["elements/Movie.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Outlet, Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { getMovieByName } from 'constants/dafaultApi';\nconst Movie = () => {\n  const [imageNameInput, setImageNameInput] = useState('');\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n  const fromQueryString = location.search.replace(/\\?query=/, '');\n\n  // const path = document.location.href.length;\n\n  const inputChange = el => {\n    const { value } = el.currentTarget;\n    setImageNameInput(value.toLowerCase());\n  };\n\n  useEffect(() => {\n    if (fromQueryString) {\n      getMovieByName(fromQueryString).then(el => {\n        setFilms(el.data.results);\n      });\n    }\n  }, []);\n\n  const handleSubmit = el => {\n    el.preventDefault();\n\n    if (imageNameInput) {\n      getMovieByName(imageNameInput).then(el => {\n        setFilms(el.data.results);\n      });\n      setSearchParams({ query: imageNameInput });\n      setImageNameInput('');\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" onChange={inputChange} value={imageNameInput} />\n        <button type=\"submit\">Search</button>\n      </form>\n      {films.length > 0 && (\n        <ul>\n          {films.map(({ original_title, id }) => (\n            <li key={id}>\n              <Link\n                state={`${location.pathname}${location.search}`}\n                to={`/movies/${id}`}\n              >\n                {original_title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Movie;\n"],"names":["useState","imageNameInput","setImageNameInput","films","setFilms","useSearchParams","setSearchParams","location","useLocation","fromQueryString","search","replace","useEffect","getMovieByName","then","el","data","results","onSubmit","preventDefault","query","type","onChange","value","currentTarget","toLowerCase","length","map","original_title","id","Link","state","pathname","to"],"sourceRoot":""}